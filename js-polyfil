

Array.prototype.myMap = function(cb) {
    let temp = [];
    for (let index = 0; index < this.length; index++) {
        temp.push(cb(this[index], index, this))
    }
    return temp;
}

const arr =  [1,2,3,4,5]

console.log(arr.map( a => a * 2))
console.log(arr.myMap( a => a * 2))

Array.prototype.myFilter  = function(cb) {
    let temp = [];
    for (let index = 0; index < this.length; index++) {
        if(cb(this[index], index, this)) {
            temp.push(this[index])
        }
    }
    return temp;
}

console.log(arr.filter( a => a > 2))
console.log(arr.myFilter( a => a > 2))

// >>>>>>>>>>>>>

Array.prototype.myReduce = function(cb, initialValue) {
    let accumulator = initialValue;
    for (let index = 0; index < this.length; index++) {
        accumulator = accumulator ? cb(accumulator, this[index], index, this) : this[index];
    }
    return accumulator;
}

console.log(arr.reduce((acc, curr) => { return acc+ curr}, 0))
console.log(arr.myReduce((acc, curr) => { return acc+ curr}, 0))
